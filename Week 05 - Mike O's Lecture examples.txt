******************************************************
COIT11134 Object Oriented Programming (2020-T2)
Week: 05
Course Web Page:             https://moodle.cqu.edu.au/course/view.php?id=17401
Course Coordinator:          Farzad Sanati, f.sanati@cqu.edu.au, Townsville
Rocky Teacher (Part-Time):   Mike O'Malley, m.omalley@cqu.edu.au
Mike O'Malley's GitHub:      https://github.com/MooseValley/Uni-2020-T2-COIT11134-Object-Oriented-Programming
Mike O'Malley's Java Videos: http://tinyurl.com/MikesJavaVideos
Textbook:	Core Java Volume I--Fundamentals, 11th Edition by Cay S. Horstmann
******************************************************

CLASS STARTING SOON.  :)
* Please feel free to join in via chat window or voice !  :)

ZOOM / Class Recordings:
* Mike O's reminder to himself: Reboot PC before class. Stop CLOUD Recording. Record video locally.
* Students Please Note: Online sessions are recorded for educational purposes.  Recordings may be uploaded to public YouTube, Moodle, Microsoft Teams, and/or other locations.  If you do NOT want to be recorded please turn your webcam and/or microphone OFF during the session. (You can type questions / comments in the chat window).  Your participation will signify your consent to the recording and publication for educational purposes.

ROAD MAP:
Week 01 - Revision of Java, Github review.  Note: Github is mandatory in this course.
Week 02 - Inheritance
Week 03 - Polymorphism
Week 04 - GUI and Event Handling
Week 05 - GUI and Event Handling.  Next week: mid-term break    <--- YOU ARE HERE !
Week 06 - Exception Handling, and File IO
Week 07 - Interfaces and Inner Classes
Week 08 - Generic methods and classes
Week 09 - Generic classes
Week 10 - List and Algorithm
Week 11 - Stacks, Queues and Trees
Week 12 - Final Revision


LAST WEEK:  Week 4
* Week 04 - GUI and Event Handling

THIS WEEK:  Week 5
* Week 05 - GUI and Event Handling.  Next week: mid-term break
* Assume everyone has read the Assignment 1 specification by now. :)
* Assignment 1 Spec
	* Walk through Ass 1 spec
	* Read the Question / Highlight Keywords
	* Story Boards - see Mike O's story boards
	* Divide and Conquer
	* Pseudo Code - plan out what you need to do and how
	* Students: write pseudo code for Create Owner
	* Students: write pseudo code for Edit Owner

* Assignment 1 - related topics
	* Default Constructor - recap - see Week 1
	* Copy Constructor
	* System assigned id - recap - see Week 1
	* Validation of user inputs - recap from prior course - see below.
	* StoryBoard - see Mike's DRAFT and Incomplete Story Boards for Ass 1
	  -> REF: assignment01-MooseValley\Story Boards - Mike O.pptx
	* A strategy for dealing with multiple data entry / display "screens".
		CardLayout ... see Mike's Demo Java code: "Week 05/MultipleCenterPanelsControlledByButtonsCardLayout.java"
	* Borders and Frames - see below.
	* What Belongs Where ???  Where should particular functionality (methods) go ?   See below.

Items from last week: (that we were going to tackle this week)
* Lamda code - more "advanced" examples, uses
	Will cover later if needed - Let's focus on Ass 1 for this class.
	In this course, all you need Lambdas for is to hook up methods to events (button click, Timer, etc)
* JSlider with labels and painted ticks
	See Mike's Java code.
* Input dialog with combobox
	Will cover later if needed - Let's focus on Ass 1 for this class.
* PopupMenus
	Will cover later if needed - Let's focus on Ass 1 for this class.
* Anything else you want !!  :)






What about:
* Display all vehicles ?
* Display all vehicles for owner ?
* Save to / Load from file ?
* Exception Handling ?
* etc
* Maybe in Ass 2 ???



Want more:
* Programming - How to Solve, Start, Do Big Programming Assignments and Projects - Part 01
https://youtu.be/F-Hwrj_SSBc
* Programming - How to Solve, Start, Do Big Programming Assignments and Projects - Part 02
https://youtu.be/BSyLgVCQlcA
* And many dozens of other step by step tutorial solving, GUI app building, etc videos here:
http://tinyurl.com/MikesJavaVideos



******************************************************
Borders and Frames
******************************************************

import javax.swing.border.*;

      myPanel.setBorder (new TitledBorder (new EtchedBorder(), " My Title: "));


******************************************************
What Belongs Where ???  Where should particular functionality (methods) go ?
******************************************************

Inheritance hierarchy:

Employee
	-> Manager

Suppose we have this setup:

	GUI Class (the user interface)
	  - Employee Class
	  - Manager Class

The idea of OOP is that every class is self contained - all of the data and the methods that work on that data are contained in a single unit, called a class.

Where should Employee data be stored ?
Where should Manager data be stored ?

Where should Employee data be checked / validate ?
Where should the error message text be created if Employee data is invalid ?
Where should error messages be displayed if Employee data is invalid ?

Where should Manager data be checked / validate ?
Where should the error message text be created if Manager data is invalid ?
Where should error messages be displayed if Manager data is invalid ?


******************************************************
Validation of user inputs - recap from prior course
******************************************************

Probably the same as what you did for Assignment 2 in the prior course ???
If not, you definitely would have done this when answering various tutorial and text book questions for the prior course.

NOTE: if we had covered Exception Handling we would NOT do it like this !
NOTE: if we had covered Exception Handling we would NOT do it like this !
NOTE: if we had covered Exception Handling we would NOT do it like this !


// *** PSEUDO CODE ***
// *** PSEUDO CODE ***
// *** PSEUDO CODE ***

// For what happens when user clicks Add, Save, .....

if (input #1 is blank or invalid)
	Select / place cursor in the GUI component with the input error, highlight red, etc ???
	Display meaningful Error message
	Abort further processing

if (input #2 is blank or invalid)
	Select / place cursor in the GUI component with the input error, highlight red, etc ???
	Display meaningful Error message
	Abort further processing

if (input #3 is blank or invalid)
	Select / place cursor in the GUI component with the input error, highlight red, etc ???
	Display meaningful Error message
	Abort further processing

::: etc for ALL other inputs

// Everything is OK
Do whatever processing is required ...
- Create object
- Add to Array / ArrayList or whatever


******************************************************
CardLayout
******************************************************
A strategy for dealing with multiple data entry / display "screens".

Also see Mike's Demo Java code: "Week 05/MultipleCenterPanelsControlledByButtonsCardLayout.java"

   private JPanel      cardLayoutPanel                 = new JPanel (new CardLayout());
   private CardLayout  cardLayout                      = (CardLayout)(cardLayoutPanel.getLayout() );

      cardLayoutPanel.add (loadingDataPanel, "loadingDataPanel");
      cardLayoutPanel.add (mainPanel,        "mainPanel");
      add (cardLayoutPanel,  BorderLayout.CENTER);

      cardLayout.show(cardLayoutPanel, "mainPanel");
      cardLayout.show(cardLayoutPanel, "loadingDataPanel");




EOF.
